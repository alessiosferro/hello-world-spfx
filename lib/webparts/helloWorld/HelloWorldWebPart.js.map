{"version":3,"sources":["webparts/helloWorld/HelloWorldWebPart.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6BAA+B;AAC/B,oCAAsC;AACtC,8DAAmD;AACnD,8DAOoC;AAEpC,kDAAoD;AACpD,sDAAiD;AAWjD;IAA+C,qCAA8C;IAA7F;;IAiEA,CAAC;IAhEQ,kCAAM,GAAb;QACE,IAAM,OAAO,GAAyC,KAAK,CAAC,aAAa,CACvE,oBAAU,EACV;YACE,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW;YACxC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI;YAC1B,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK;YAC5B,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK;YAC5B,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK;SAC7B,CACF,CAAC;QAEF,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IAC5C,CAAC;IAGD,sBAAc,0CAAW;QADzB,aAAa;aACb;YACE,MAAM,CAAC,yBAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC;;;OAAA;IAES,wDAA4B,GAAtC;QACE,MAAM,CAAC;YACL,KAAK,EAAE;gBACL;oBACE,MAAM,EAAE;wBACN,WAAW,EAAE,OAAO,CAAC,uBAAuB;qBAC7C;oBACD,MAAM,EAAE;wBACN;4BACE,SAAS,EAAE,OAAO,CAAC,cAAc;4BACjC,WAAW,EAAE;gCACX,uCAAqB,CAAC,aAAa,EAAE;oCACnC,KAAK,EAAE,OAAO,CAAC,qBAAqB;oCACpC,SAAS,EAAE,IAAI;iCAChB,CAAC;gCACF,uCAAqB,CAAC,MAAM,EAAE;oCAC5B,KAAK,EAAE,YAAY;iCACpB,CAAC;gCACF,sCAAoB,CAAC,OAAO,EAAE;oCAC5B,IAAI,EAAE,UAAU;iCACjB,CAAC;gCACF,sCAAoB,CAAC,OAAO,EAAE;oCAC5B,KAAK,EAAE,UAAU;oCACjB,OAAO,EAAE;wCACP,EAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAC;wCACvB,EAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAC;wCACvB,EAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAC;wCACzB,EAAC,IAAI,EAAE,gDAA8B,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAC;wCAC5E,EAAC,IAAI,EAAE,gDAA8B,CAAC,OAAO,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE,EAAC;wCACxE,EAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,gBAAgB,EAAC;qCACnC;iCACF,CAAC;gCACF,oCAAkB,CAAC,OAAO,EAAE;oCAC1B,KAAK,EAAE,QAAQ;oCACf,OAAO,EAAE,KAAK;oCACd,MAAM,EAAE,IAAI;iCACb,CAAC;6BACH;yBACF;qBACF;iBACF;aACF;SACF,CAAC;IACJ,CAAC;IACH,wBAAC;AAAD,CAjEA,AAiEC,CAjE8C,uCAAqB,GAiEnE","file":"webparts/helloWorld/HelloWorldWebPart.js","sourcesContent":["import * as React from 'react';\nimport * as ReactDom from 'react-dom';\nimport {Version} from '@microsoft/sp-core-library';\nimport {\n  BaseClientSideWebPart,\n  IPropertyPaneConfiguration,\n  PropertyPaneCheckbox,\n  PropertyPaneDropdown,\n  PropertyPaneDropdownOptionType,\n  PropertyPaneTextField, PropertyPaneToggle\n} from '@microsoft/sp-webpart-base';\n\nimport * as strings from 'HelloWorldWebPartStrings';\nimport HelloWorld from './components/HelloWorld';\nimport {IHelloWorldProps} from './components/IHelloWorldProps';\n\nexport interface IHelloWorldWebPartProps {\n  description: string;\n  test: string;\n  test1: boolean;\n  test2: string;\n  test3: boolean;\n}\n\nexport default class HelloWorldWebPart extends BaseClientSideWebPart<IHelloWorldWebPartProps> {\n  public render(): void {\n    const element: React.ReactElement<IHelloWorldProps> = React.createElement(\n      HelloWorld,\n      {\n        description: this.properties.description,\n        test: this.properties.test,\n        test1: this.properties.test1,\n        test2: this.properties.test2,\n        test3: this.properties.test3\n      }\n    );\n\n    ReactDom.render(element, this.domElement);\n  }\n\n  // @ts-ignore\n  protected get dataVersion(): Version {\n    return Version.parse('1.0');\n  }\n\n  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {\n    return {\n      pages: [\n        {\n          header: {\n            description: strings.PropertyPaneDescription\n          },\n          groups: [\n            {\n              groupName: strings.BasicGroupName,\n              groupFields: [\n                PropertyPaneTextField('description', {\n                  label: strings.DescriptionFieldLabel,\n                  multiline: true,\n                }),\n                PropertyPaneTextField('test', {\n                  label: 'Text field'\n                }),\n                PropertyPaneCheckbox('test1', {\n                  text: 'Checkbox'\n                }),\n                PropertyPaneDropdown('test2', {\n                  label: 'Dropdown',\n                  options: [\n                    {key: '1', text: 'One'},\n                    {key: '2', text: 'Two'},\n                    {key: '3', text: 'Three'},\n                    {type: PropertyPaneDropdownOptionType.Header, key: 'header', text: 'Header'},\n                    {type: PropertyPaneDropdownOptionType.Divider, key: 'divider', text: ''},\n                    {key: '5', text: 'Another option'}\n                  ]\n                }),\n                PropertyPaneToggle('test3', {\n                  label: 'Toggle',\n                  offText: 'Off',\n                  onText: 'On'\n                })\n              ]\n            }\n          ]\n        }\n      ]\n    };\n  }\n}\n"],"sourceRoot":"..\\..\\..\\src"}